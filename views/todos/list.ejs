<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TODOS MongodbBread</title>
  <link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>


<body>
  <script src="/javascripts/jquery-3.7.1.min.js"></script>
  
  <div>
    <div class="groupTittle">
      <h1>
        <center class="title">Todo List</center>
      </h1>
    </div>
    <div class="groupForm">
      <div class="row mb-3">
        <label for="inputtitle" class="col-sm-2 col-form-label">Tittle</label>
        <div class="col-sm-10">
          <input type="text" name="title" class="form-control" id="inputtitle" placeholder="Insert your title">
        </div>
      </div>
      <div class="row mb-3">
        <label for="deadline" class="col-sm-2 col-form-label"> Deadline </label>
        <div class="col-sm-10">
          <div class="row g-3">
            <div class="col">
              <input type="date" name="startdate" class="form-control">
            </div>
            <div class="col">
              <input type="date" name="enddate" class="form-control">
            </div>
          </div>
        </div>
      </div>
      <div class="row mb-3">
        <label for="complete" class="col-sm-2 col-form-label"> Complete </label>
        <div class="col-sm-10">
          <select type="text" name="complete" class="form-control">
            <option disabled selected>-select complete-</option>
            <option value="true">Done</option>
            <option value="false">Not Yet</option>
          </select>
        </div>
      </div>
      <div class="row mb-3">
        <div class="col-sm-2"><a class="btn btn-success"><i class="fa-solid fa-sort" style="color: #ffffff;"></i> Sort
            by deadline</a></div>
        <div class="col-sm-10">
          <a class="btn btn-warning"><i class="fa-solid fa-arrows-rotate"></i></a>
          <button type="submit" class="btn btn-info"><i class="fa-solid fa-magnifying-glass"></i></button>
        </div>
      </div>
    </div>
    <div class="groupButton">
      <div class="row mb-1">
        <div class="col-sm-11">
          <input type="text" class="form-control" placeholder="title" id="title">
        </div>
        <div class="col-sm-1">
          <button type="button" class="btn btn-outline-primary" onclick="addData()"><i class="fa-solid fa-circle-down"
              style="color: #185bcd;"></i></button>
        </div>
      </div>
    </div>
    <hr>
    <div class="groupTable" id="todos-alert">

    </div>
  </div>

  <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="form-edit-user">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="editModalLabel">User Form</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="name" class="col-form-label">Title:</label>
              <input type="text" class="form-control" id="updatetitle">
            </div>
            <div class="mb-3">
              <label for="phone" class="col-form-label">Deadline:</label>
              <input type="datetime-local" class="form-control" id="updatedeadline"></textarea>
            </div>
            <div class="row mb-3">
              <label for="inputPassword3" class="col-sm-2 col-form-label">Complete</label>
              <div class="col-sm-10">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="complete">
                  <label class="form-check-label" for="complete">
                    Done
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary" onclick="editData()">Save Changes</button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="form-edit-user">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="editModalLabel">User Form</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="title" class="col-form-label">Title:</label>
              <input type="text" class="form-control" id="updatetitle">
            </div>
            <div class="mb-3">
              <label for="deadline" class="col-form-label">Deadline:</label>
              <input class="form-control" id="updatedeadline">
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
    </div>
    </form>
  </div>

  <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Confirmation</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p> Are you sure? </p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
          <button type="button" class="btn btn-primary" onclick="deleteData()">Yes</button>
        </div>
      </div>
    </div>
  </div>

  <script src="/javascripts/bootstrap.min.js"></script>

  <script>


    let id = null
    let title = ""
    let startdate = ""
    let enddate = ""
    let deadline = null
    let complete = ''
    let limit = 5
    let search = ""
    let executor = "<%= executor %>"

    function readId(_id) {
      id = _id
      console.log(`${'id'}`)
    }

    function searchData() {
      const title = $('#updatetitle').val()
      const deadline = $('#updatedeadline').val()
      const complete = $('#updatecomplete').val()
      let getSearchdata = $('#inputSearch').val()
      search = getSearchdata.toString()
      readData()
    }

    function resetData() {
      search = $('#inputSearch').val()
      readData()
    }

    const editForm = new bootstrap.Modal('#editModal', {
      keyboard: false
    })

    const deleteForm = new bootstrap.Modal('#deleteModal', {
      keyboard: false
    })

    $('#form-user').submit(function (event) {
      event.preventDefault()
      addData()
    })

    $('#form-edit-user').submit(function (event) {
      event.preventDefault()
      editData()
    })

    const readData = async (page = 1) => {
      let pageNumber = ""
      const response = await fetch(`http://localhost:3000/api/todos?executor=${executor}&title=${title}&startdate=${startdate}&enddate=${enddate}&complete=${complete}`)
      const todos = await response.json()
      const offset = todos.offset
      let alert = ''
      todos.data.forEach((item, index) => {
        alert += `
          <div ${item.complete == true} ? class="alert alert-success" : class="alert alert-danger" role="alert">
            ${moment(item.deadline).format('DD-MM-YYYY, h:mm:ss a')} ${item.title}
            <a data-bs-toggle="modal" data-bs-target="#editModal" onclick=getData('${item._id}')><i class="fa-solid fa-pencil"></i></a>
            <a data-bs-toggle="modal" data-bs-target="#deleteModal" onclick=readId('${item._id}')><i class="fa-solid fa-trash"></i></a>
          </div>
            `
      });

      $('#todos-alert').html(alert)

    }

    const addData = async () => {
      const title = $('#title').val()
      const response = await fetch(`http://localhost:3000/api/todos`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ title, executor }),
      });

      const result = await response.json();

      readData()
    }

    const editData = async () => {
      const title = $('#updatetitle').val()
      const deadline = $('#updatedeadline').val()
      const complete = $('#updatecomplete').prop('checked',true)
      console.log(title, deadline, complete)
      const response = await fetch(`http://localhost:3000/api/todos/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ title, deadline, complete: Boolean(complete) }),
      });

      const result = await response.json();
      readData()
      editForm.hide()

    }

    const getData = async (id) => {
      try {
        id = id
        const response = await fetch(`http://localhost:3000/api/todos/${id}`);
        const { todos } = await response.json()
        console.log('user', todos)
        readId(todos._id)
        
        $('#updatetitle').val(todos.title)
        $('#updatedeadline').val(moment(todos.deadline).format('YYYY-MM-DDThh:mm'))
        $('#updatecomplete').val(todos.complete)
        editForm.show()
      } catch (err) {
        console.log(err)
      }
    }

    const changePage = async (number) => {
      readData(number)
    }

    const deleteData = async () => {
      const response = await fetch(`http://localhost:3000/api/todos/${id}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        }
      });
      const result = await response.json();
      readData()
      deleteForm.hide()
    }

    const changeTodos = async (id) => {
      const response = await fetch(`http://localhost:3000/api/users/${id}/todos`)
      const { user } = await response.json()
    }


    readData()


  </script>
  <script src="/javascripts/moment.js"></script>
</body>

</html>